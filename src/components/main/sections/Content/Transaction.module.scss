@use "sass:math";

@import "../../../../styles/mixins";

/* stylelint-disable-next-line plugin/whole-pixel */
$iconExtraBorderWidth: 0.03898rem; // The sub-pixel part of the icon border width
$subIconSize: 1rem;

.item {
  $leftPadding: 0.75rem;
  $iconColumnWidth: 2.875rem;

  --border-radius-value: 0.25rem;

  position: relative;

  display: grid;
  grid-template-areas: "icon header" "icon subheader" "useless nft" "useless comment";
  grid-template-columns: $iconColumnWidth 1fr;
  grid-template-rows: 1.5rem 1.25rem auto auto;
  align-items: center;
  justify-content: center;

  width: 100%;
  padding: 0.625rem 1rem 0.625rem $leftPadding;

  color: var(--color-black);
  text-align: left;

  &::after {
    content: '';

    position: absolute;
    right: 0;
    bottom: 0;
    left: $leftPadding + $iconColumnWidth;

    height: 0.0625rem;
    /* stylelint-disable-next-line plugin/whole-pixel */
    box-shadow: inset 0 -0.025rem 0 0 var(--color-separator);
  }

  @include is-mobile() {
    $iconColumnWidth: 3rem;

    grid-template-columns: $iconColumnWidth 1fr;

    &::after {
      left: $leftPadding + $iconColumnWidth;
    }
  }

  @media (hover: hover) {
    &:focus-visible,
    &:hover {
      --color-background-first: var(--color-interactive-item-hover);

      background-color: var(--color-interactive-item-hover);
    }
  }

  &.active {
    --color-background-first: var(--color-interactive-item-hover);

    background-color: var(--color-interactive-item-hover);
  }

  &:active {
    // Optimization
    transition: none;
  }
}

.itemLast {
  &::after {
    content: none;
  }
}

.icon {
  position: relative;

  grid-area: icon;

  width: 2.25rem;
  height: 2.25rem;

  font-size: 1.5rem;
  line-height: 1;
  color: var(--color-activity-gray-text);
  text-align: center;

  background-color: var(--color-activity-gray-background);
  border-radius: 50%;

  &::before {
    line-height: 2.375rem;
  }

  &:global(.icon-cog),
  &:global(.icon-fire) {
    font-size: 1.625rem;
  }

  &Swap {
    background: none;
  }

  @include is-mobile() {
    width: 2.375rem;
    height: 2.375rem;
  }
}

.iconFromToken {
  position: absolute;
  top: 0;
  left: 0;
}

.iconToToken {
  $borderWidth: 0.0625rem;

  position: absolute;
  right: -$borderWidth;
  bottom: -$borderWidth;

  padding: $borderWidth;

  background: var(--color-background-first);
  border-radius: 50%;
}

.iconWaiting,
.iconError {
  position: absolute;
  bottom: -0.125rem;
  inset-inline-end: -0.125rem;

  font-size: $subIconSize;
  line-height: 1;

  background-color: var(--color-background-first);
  border-radius: 50%;
}

.iconError {
  transform: scale(math.div($subIconSize + $iconExtraBorderWidth * 2, $subIconSize));

  color: var(--color-activity-red-text);
}

.iconToToken,
.iconWaiting {
  box-shadow: 0 0 0 $iconExtraBorderWidth var(--color-background-first);
}

.header,
.subheader {
  display: flex;
  gap: 0.25rem;
  align-items: baseline;
  justify-content: space-between;

  min-width: 0;

  white-space: nowrap;
}

.header {
  grid-area: header;

  font-size: 0.9375rem;
  font-weight: 600;

  @include is-mobile() {
    font-size: 1rem;
  }
}

.subheader {
  grid-area: subheader;

  font-size: 0.75rem;
  font-weight: 500;
  color: var(--color-gray-2);

  @include is-mobile() {
    font-size: 0.8125rem;
  }
}

.operationName,
.address {
  overflow: hidden;

  text-overflow: ellipsis;
}

.amount,
.address {
  text-align: right;
}

.addressValue {
  font-weight: 700;

  > small {
    font-size: 0.625rem;
  }
}

.chainIcon {
  vertical-align: -0.125rem;
}

.amount {
  color: var(--color-gray-1);

  background: none !important;
}

.commentIcon {
  font-size: 1rem;
  vertical-align: -0.25rem;
}

.comment {
  overflow: hidden;
  grid-area: comment;

  max-width: 100%;
  padding: 0.4375rem 0.625rem;

  font-size: 0.875rem;
  font-weight: 600;
  line-height: 1.125rem;
  text-overflow: ellipsis;
  white-space: nowrap;
}

.scamImage {
  width: 2.4375rem;
  margin-left: 0.3125rem;
}

.swapAmount {
  display: flex;
  align-items: center;
}

.swapArrowRight {
  margin: 0 0.125rem;

  color: transparent;

  background: var(--color-gradient-main-gray2-green);
  background-clip: text;
  background-size: 100%;
}

.swapSell {
  color: var(--color-gray-2);
}

.swapBuy {
  color: var(--color-green);
}

// .swapBuy should be stronger than .swapSell, but weaker than .swapHold
/* stylelint-disable-next-line plugin/stylelint-group-selectors */
.swapHold {
  color: var(--color-gray-2);
}

.swapError {
  color: var(--color-activity-red-text);
}

.isSwapErrorMessage {
  font-size: 0.75rem;
  color: var(--color-activity-red-text);
}

.nft {
  overflow: hidden;
  display: flex;
  grid-area: nft;
  align-items: center;

  max-width: 100%;
  height: 3.5rem;
}

.nftImage {
  width: 3.5rem;
  height: 3.5rem;

  object-fit: cover;
  border-top-right-radius: var(--border-radius-default);
  border-bottom-right-radius: var(--border-radius-default);
}

.nftData {
  min-width: 0;
  padding: 0 0.75rem 0 0.625rem;
}

.nftName,
.nftCollection {
  overflow: hidden;

  text-overflow: ellipsis;
  white-space: nowrap;
}

.nftName {
  font-size: 0.9375rem;
  font-weight: 700;

  @include is-mobile() {
    font-size: 1rem;
  }
}

.nftCollection {
  font-size: 0.75rem;
  font-weight: 500;
  color: var(--color-gray-2);

  @include is-mobile() {
    font-size: 0.8125rem;
  }

  .colorPositive & {
    color: var(--color-activity-green-text-2);
  }

  .colorNegative & {
    color: var(--color-activity-red-text-2);
  }
}

.nft,
.comment {
  margin-top: 0.375rem;

  color: var(--color-activity-gray-text);

  background-color: var(--color-activity-gray-background);
  border-radius: var(--border-radius-default);

  &:not(.received) {
    margin-inline-start: auto;

    border-top-right-radius: var(--border-radius-mini);
  }

  &.received {
    margin-inline-end: auto;

    border-top-left-radius: var(--border-radius-mini);
  }
}

.nftWithComment {
  &:not(.received) {
    border-bottom-right-radius: var(--border-radius-mini);
  }

  &.received {
    border-bottom-left-radius: var(--border-radius-mini);
  }
}

.color {
  &Positive {
    color: var(--color-activity-green-text);

    background-color: var(--color-activity-green-background);
  }

  &Stake {
    color: var(--color-activity-purple-text);

    background-color: var(--color-activity-purple-background);
  }

  &Negative {
    color: var(--color-activity-red-text);

    background-color: var(--color-activity-red-background);
  }
}

.takesAddressSpace {
  &:not(& + &) {
    $maxDateWidth: 2.75rem;

    max-width: calc(100% - $maxDateWidth);
    margin-top: -0.875rem;
  }
}
