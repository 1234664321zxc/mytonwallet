@use "sass:color";

@import "../../styles/variables";

@import "../../styles/mixins";

$scrollOffset: 0.1875rem;

.portraitContainer {
  display: flex;
  flex-direction: column;

  max-width: 25rem;
  height: auto;
  min-height: calc(var(--vh, 1vh) * 100);
  max-height: none;
  margin: auto;
  padding: 0 0.75rem !important;

  @include adapt-padding-to-scrollbar(0.75rem, !important); /* stylelint-disable-line order/order */

  @supports (padding-bottom: env(safe-area-inset-bottom)) {
    padding-bottom: env(safe-area-inset-bottom) !important;

    /* stylelint-disable-next-line order/order, at-rule-empty-line-before */
    @include respond-above(xs) {
      padding-bottom: max(env(safe-area-inset-bottom), 1rem) !important;
    }
  }
}

.head {
  position: relative;
  z-index: 2;
}

.landscapeContainer {
  display: grid;
  grid-template-columns: 21.5rem 1fr;
  column-gap: calc(0.75rem - var(--scrollbar-width) - #{$scrollOffset});

  /* 948px + 1rem padding on both sides */
  max-width: calc(59.25rem + 2rem);
  height: 100vh;
  max-height: calc(var(--vh, 1vh) * 100);
  margin: auto;
  padding: 1rem 1rem 0;

  :global(html.is-electron:not(.is-linux)) & {
    height: calc(100vh - 3rem);
    padding-top: 0;
  }

  @supports (column-gap: max(0px, 1px)) {
    column-gap: max(0px, calc(0.75rem - var(--scrollbar-width) - #{$scrollOffset}));
  }
}

.main,
.sidebar {
  display: flex;
  flex-direction: column;

  height: 100%;
  min-height: 0;
  padding-bottom: 1rem;
}

.main {
  overflow: hidden;
}

.sidebar {
  overflow-x: hidden;
  overflow-y: scroll;

  // Add some space between scrollbar and content
  padding-right: #{$scrollOffset};
}
