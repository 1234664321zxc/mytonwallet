@use "sass:color";

@import '../../styles/variables';

.button {
  cursor: pointer;
  user-select: none;

  color: var(--color-gray-button-text);
  text-decoration: none;

  background: none;
  border: 0;
  border-radius: 0;
  outline: none !important;

  transition: background-color 150ms, color 150ms, opacity 150ms;

  // @optimization
  &.clicked,
  &:active {
    transition: none !important;
  }
}

.button:not(.isSimple) {
  display: flex;
  align-items: center;
  justify-content: center;

  width: 100%;

  font-size: 1.0625rem;
  line-height: 1.25;

  &:not(.isText) {
    max-width: 66%;
    height: 3rem;
    padding: 0.5rem 0.625rem;

    font-weight: 700;
    color: var(--color-gray-button-text);
    text-transform: uppercase;

    background-color: var(--color-gray-button-background);
    border-radius: var(--border-radius-buttons);

    &:hover,
    &:focus {
      color: var(--color-gray-button-text-hover);

      background-color: var(--color-gray-button-background-hover);
    }

    &:active {
      color: var(--color-gray-button-text-active);

      background-color: var(--color-gray-button-background-active);
    }

    &[disabled] {
      pointer-events: none;

      opacity: 0.4;
    }
  }
}

.isText {
  color: var(--color-blue);

  background-color: transparent;

  transition: color 150ms;

  &:hover,
  &:focus,
  &:active {
    color: var(--color-blue-button-background-hover);
  }

  &[disabled] {
    opacity: 0.4;
  }
}

.button.primary:not(.isSimple) {
  color: var(--color-blue-button-text);

  background-color: var(--color-blue-button-background);

  &:hover,
  &:focus {
    color: var(--color-blue-button-text-hover);

    background-color: var(--color-blue-button-background-hover);
  }

  &:active {
    color: var(--color-blue-button-text-active);

    background-color: var(--color-blue-button-background-active);
  }
}

.button.transparent:not(.isSimple) {
  &,
  &:hover,
  &:active {
    background: transparent;
  }
}

.button.disabled {
  pointer-events: none;
  cursor: default;

  opacity: 0.4;
}

.button.destructive:not(.isSimple) {
  color: var(--color-red-button-text);

  background-color: var(--color-red-button-background);

  &:hover,
  &:focus {
    color: var(--color-red-button-text-hover);

    background-color: var(--color-red-button-background-hover);
  }

  &:active {
    color: var(--color-red-button-text-active);

    background-color: var(--color-red-button-background-active);
  }

  &[disabled] {
    opacity: 0.4;
  }
}

.sizeSmall {
  height: 2.5rem;
}

.round {
  width: 3.5rem;
  height: 3.5rem;

  border-radius: 50%;

  &.sizeSmall {
    width: 2.5rem;
    height: 2.5rem;
  }
}

.loading {
  position: relative;

  &::after {
    content: "";

    position: absolute;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;

    width: 1rem;
    height: 1rem;
    margin: auto;

    border: 0.25rem solid transparent;
    border-top-color: var(--color-white);
    border-radius: 50%;

    animation: button-loading-spinner 1s linear infinite;
  }
}

.buttonText {
  visibility: hidden;
  opacity: 0;
}

@keyframes button-loading-spinner {
  from {
    transform: rotate(0turn);
  }

  to {
    transform: rotate(1turn);
  }
}
